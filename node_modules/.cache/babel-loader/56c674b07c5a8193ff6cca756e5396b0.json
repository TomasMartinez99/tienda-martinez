{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\tienda-martinez\\\\src\\\\components\\\\context\\\\CartContext.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; // Array para almacenar los productos agregados\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/React.createContext([]); // CartComponentProvider es el proveedor de nuestro CartContext\n\nexport const CartComponentProvider = ({\n  children\n}) => {\n  _s();\n\n  const [quantity, setQuantity] = useState(0);\n  const [aggregateItems, setAggregateItems] = useState([]);\n\n  const addItem = (smartwatch, itemCount) => {\n    const smartwatchId = smartwatch.itemToShow.id;\n    const found = aggregateItems.find(element => {\n      /* console.log(element.smartwatch.itemToShow.id); */\n      console.log(element.smartwatch.itemToShow.id);\n      return element === smartwatchId;\n    });\n    setAggregateItems([...aggregateItems, {\n      smartwatch,\n      itemCount\n    }]);\n    setQuantity(quantity + itemCount);\n  };\n\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      aggregateItems,\n      setAggregateItems,\n      addItem,\n      quantity\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartComponentProvider, \"I5UABz+q8rvLqkqXx2b3Sp9Fjlg=\");\n\n_c = CartComponentProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartComponentProvider\");","map":{"version":3,"sources":["C:/wamp64/www/tienda-martinez/src/components/context/CartContext.jsx"],"names":["React","useState","CartContext","createContext","CartComponentProvider","children","quantity","setQuantity","aggregateItems","setAggregateItems","addItem","smartwatch","itemCount","smartwatchId","itemToShow","id","found","find","element","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CAEA;;;AACA,OAAO,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,CAAoB,EAApB,CAApB,C,CAEP;;AACA,OAAO,MAAMC,qBAAqB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACrD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACO,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,CAAC,EAAD,CAApD;;AAEA,QAAMS,OAAO,GAAG,CAACC,UAAD,EAAaC,SAAb,KAA2B;AACzC,UAAMC,YAAY,GAAGF,UAAU,CAACG,UAAX,CAAsBC,EAA3C;AAEA,UAAMC,KAAK,GAAGR,cAAc,CAACS,IAAf,CAAqBC,OAAD,IAAa;AAC7C;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAO,CAACP,UAAR,CAAmBG,UAAnB,CAA8BC,EAA1C;AAEA,aAAOG,OAAO,KAAKL,YAAnB;AACD,KALa,CAAd;AAOAJ,IAAAA,iBAAiB,CAAC,CAAC,GAAGD,cAAJ,EAAoB;AAAEG,MAAAA,UAAF;AAAcC,MAAAA;AAAd,KAApB,CAAD,CAAjB;AACAL,IAAAA,WAAW,CAACD,QAAQ,GAAGM,SAAZ,CAAX;AACD,GAZD;;AAcA,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLJ,MAAAA,cADK;AAELC,MAAAA,iBAFK;AAGLC,MAAAA,OAHK;AAILJ,MAAAA;AAJK,KADT;AAAA,cASGD;AATH;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CA/BM;;GAAMD,qB;;KAAAA,qB","sourcesContent":["import React, { useState } from \"react\";\r\n\r\n// Array para almacenar los productos agregados\r\nexport const CartContext = React.createContext([]);\r\n\r\n// CartComponentProvider es el proveedor de nuestro CartContext\r\nexport const CartComponentProvider = ({ children }) => {\r\n  const [quantity, setQuantity] = useState(0);\r\n  const [aggregateItems, setAggregateItems] = useState([]);\r\n\r\n  const addItem = (smartwatch, itemCount) => {\r\n    const smartwatchId = smartwatch.itemToShow.id;\r\n\r\n    const found = aggregateItems.find((element) => {\r\n      /* console.log(element.smartwatch.itemToShow.id); */\r\n      console.log(element.smartwatch.itemToShow.id);\r\n\r\n      return element === smartwatchId;\r\n    });\r\n\r\n    setAggregateItems([...aggregateItems, { smartwatch, itemCount }]);\r\n    setQuantity(quantity + itemCount);\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider\r\n      value={{\r\n        aggregateItems,\r\n        setAggregateItems,\r\n        addItem,\r\n        quantity,\r\n      }}\r\n    >\r\n      {/* Componentes que van a tener acceso */}\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}