{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\tienda-martinez\\\\src\\\\views\\\\ItemListContainer\\\\ItemListContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport ItemList from \"./dummyComponents/ItemList\";\nimport { useParams } from \"react-router-dom\";\nimport { Smartwatches } from \"../../services/Smartwatches\";\nimport { database } from \"../../firebase/firebase\"; // Promise\n\n/* const promiseItem = () => {\r\n  return new Promise((resolve, reject) => {\r\n    setTimeout(() => {\r\n      // Si está todo ok se muestra el resolve\r\n      resolve(Smartwatches);\r\n    }, 1000);\r\n  });\r\n};\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ItemListContainer = props => {\n  _s();\n\n  // Hook useState\n  const [watchesToShow, setWatchesToShow] = useState([]); // useParams (parámetros que recibo por url)\n\n  const {\n    categoryId\n  } = useParams(); // useEffect de Firebase\n\n  useEffect(() => {\n    console.log(\"Cargando items\");\n    console.log(categoryId);\n    const itemCollection = database.collection(\"products\"); // Método de filtrado por marcas\n\n    const filterItems = () => {\n      const filter = itemCollection.where(\"brand\", \"==\", categoryId);\n      filter.get().then(querySnapshot => {\n        if (querySnapshot.size === 0) {\n          alert(\"No hay resultados\");\n        }\n\n        setWatchesToShow(querySnapshot.docs.map(doc => doc.data()));\n      }).catch(error => {\n        console.log(\"Error buscando items\", error);\n      });\n    }; // Método para listar productos\n\n\n    const items = () => {\n      itemCollection.get().then(querySnapshot => {\n        if (querySnapshot.size === 0) {\n          alert(\"No hay resultados\");\n        }\n\n        setWatchesToShow(querySnapshot.docs.map(doc => doc.data()));\n      }).catch(error => {\n        console.log(\"Error buscando items\", error);\n      });\n    };\n\n    categoryId === undefined ? items() : filterItems();\n  }, [categoryId]); // Hook useEffect\n\n  /*   useEffect(() => {\r\n    promiseItem().then((Smartwatches) => {\r\n      const brandFiltered =\r\n        categoryId === undefined\r\n          ? Smartwatches\r\n          : Smartwatches.filter(\r\n              (smartwatch) => smartwatch.brand === categoryId\r\n            );\r\n      setWatchesToShow(brandFiltered);\r\n    });\r\n  }, [categoryId]); */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: /*#__PURE__*/_jsxDEV(ItemList, {\n      watchesToShow: watchesToShow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ItemListContainer, \"UQqhJIfQZeHWH2q/JuQhw2fxjeE=\", false, function () {\n  return [useParams];\n});\n\n_c = ItemListContainer;\nexport default ItemListContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemListContainer\");","map":{"version":3,"sources":["C:/wamp64/www/tienda-martinez/src/views/ItemListContainer/ItemListContainer.jsx"],"names":["React","useState","useEffect","ItemList","useParams","Smartwatches","database","ItemListContainer","props","watchesToShow","setWatchesToShow","categoryId","console","log","itemCollection","collection","filterItems","filter","where","get","then","querySnapshot","size","alert","docs","map","doc","data","catch","error","items","undefined"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,YAAT,QAA6B,6BAA7B;AACA,SAASC,QAAT,QAAyB,yBAAzB,C,CAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AAAA;;AAC1C;AACA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAC,EAAD,CAAlD,CAF0C,CAI1C;;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAiBP,SAAS,EAAhC,CAL0C,CAO1C;;AACAF,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACA,UAAMG,cAAc,GAAGR,QAAQ,CAACS,UAAT,CAAoB,UAApB,CAAvB,CAHc,CAKd;;AACA,UAAMC,WAAW,GAAG,MAAM;AACxB,YAAMC,MAAM,GAAGH,cAAc,CAACI,KAAf,CAAqB,OAArB,EAA8B,IAA9B,EAAoCP,UAApC,CAAf;AAEAM,MAAAA,MAAM,CACHE,GADH,GAEGC,IAFH,CAESC,aAAD,IAAmB;AACvB,YAAIA,aAAa,CAACC,IAAd,KAAuB,CAA3B,EAA8B;AAC5BC,UAAAA,KAAK,CAAC,mBAAD,CAAL;AACD;;AACDb,QAAAA,gBAAgB,CAACW,aAAa,CAACG,IAAd,CAAmBC,GAAnB,CAAwBC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAAhC,CAAD,CAAhB;AACD,OAPH,EAQGC,KARH,CAQUC,KAAD,IAAW;AAChBjB,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCgB,KAApC;AACD,OAVH;AAWD,KAdD,CANc,CAsBd;;;AACA,UAAMC,KAAK,GAAG,MAAM;AAClBhB,MAAAA,cAAc,CACXK,GADH,GAEGC,IAFH,CAESC,aAAD,IAAmB;AACvB,YAAIA,aAAa,CAACC,IAAd,KAAuB,CAA3B,EAA8B;AAC5BC,UAAAA,KAAK,CAAC,mBAAD,CAAL;AACD;;AACDb,QAAAA,gBAAgB,CAACW,aAAa,CAACG,IAAd,CAAmBC,GAAnB,CAAwBC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAAhC,CAAD,CAAhB;AACD,OAPH,EAQGC,KARH,CAQUC,KAAD,IAAW;AAChBjB,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCgB,KAApC;AACD,OAVH;AAWD,KAZD;;AAcAlB,IAAAA,UAAU,KAAKoB,SAAf,GAA2BD,KAAK,EAAhC,GAAqCd,WAAW,EAAhD;AACD,GAtCQ,EAsCN,CAACL,UAAD,CAtCM,CAAT,CAR0C,CAgD1C;;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACE,QAAC,QAAD;AAAU,MAAA,aAAa,EAAEF;AAAzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAlEM;;GAAMF,iB;UAKYH,S;;;KALZG,iB;AAmEb,eAAeA,iBAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport ItemList from \"./dummyComponents/ItemList\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Smartwatches } from \"../../services/Smartwatches\";\r\nimport { database } from \"../../firebase/firebase\";\r\n\r\n// Promise\r\n/* const promiseItem = () => {\r\n  return new Promise((resolve, reject) => {\r\n    setTimeout(() => {\r\n      // Si está todo ok se muestra el resolve\r\n      resolve(Smartwatches);\r\n    }, 1000);\r\n  });\r\n};\r\n */\r\nexport const ItemListContainer = (props) => {\r\n  // Hook useState\r\n  const [watchesToShow, setWatchesToShow] = useState([]);\r\n\r\n  // useParams (parámetros que recibo por url)\r\n  const { categoryId } = useParams();\r\n\r\n  // useEffect de Firebase\r\n  useEffect(() => {\r\n    console.log(\"Cargando items\");\r\n    console.log(categoryId);\r\n    const itemCollection = database.collection(\"products\");\r\n\r\n    // Método de filtrado por marcas\r\n    const filterItems = () => {\r\n      const filter = itemCollection.where(\"brand\", \"==\", categoryId);\r\n\r\n      filter\r\n        .get()\r\n        .then((querySnapshot) => {\r\n          if (querySnapshot.size === 0) {\r\n            alert(\"No hay resultados\");\r\n          }\r\n          setWatchesToShow(querySnapshot.docs.map((doc) => doc.data()));\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error buscando items\", error);\r\n        });\r\n    };\r\n\r\n    // Método para listar productos\r\n    const items = () => {\r\n      itemCollection\r\n        .get()\r\n        .then((querySnapshot) => {\r\n          if (querySnapshot.size === 0) {\r\n            alert(\"No hay resultados\");\r\n          }\r\n          setWatchesToShow(querySnapshot.docs.map((doc) => doc.data()));\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error buscando items\", error);\r\n        });\r\n    };\r\n\r\n    categoryId === undefined ? items() : filterItems();\r\n  }, [categoryId]);\r\n\r\n  // Hook useEffect\r\n  /*   useEffect(() => {\r\n    promiseItem().then((Smartwatches) => {\r\n      const brandFiltered =\r\n        categoryId === undefined\r\n          ? Smartwatches\r\n          : Smartwatches.filter(\r\n              (smartwatch) => smartwatch.brand === categoryId\r\n            );\r\n      setWatchesToShow(brandFiltered);\r\n    });\r\n  }, [categoryId]); */\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <ItemList watchesToShow={watchesToShow} />\r\n    </div>\r\n  );\r\n};\r\nexport default ItemListContainer;\r\n"]},"metadata":{},"sourceType":"module"}