{"ast":null,"code":"import _toConsumableArray from\"C:/wamp64/www/tienda-martinez/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:/wamp64/www/tienda-martinez/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";// Array para almacenar los productos agregados\nimport{jsx as _jsx}from\"react/jsx-runtime\";export var CartContext=/*#__PURE__*/React.createContext([]);// CartComponentProvider es el proveedor de nuestro CartContext\nexport var CartComponentProvider=function CartComponentProvider(_ref){var children=_ref.children;// Cantidad de los productos agregados\nvar _useState=useState(0),_useState2=_slicedToArray(_useState,2),quantity=_useState2[0],setQuantity=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),aggregateItems=_useState4[0],setAggregateItems=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),orderData=_useState6[0],setOrderData=_useState6[1];var addItem=function addItem(smartwatch,itemCount){var smartwatchId=smartwatch.id;var dupAggregateItems=_toConsumableArray(aggregateItems);// Buscamos si coincide el id del item a agregar con los que tenemos agregados\nvar found=dupAggregateItems.find(function(element){return element.smartwatch.id===smartwatchId;});// Condici칩n para saber si el item est치 agregado\nif(found){var sum=found.itemCount;found.itemCount=sum+itemCount;setAggregateItems(dupAggregateItems);setQuantity(quantity+itemCount);}else{setAggregateItems([].concat(_toConsumableArray(aggregateItems),[{smartwatch:smartwatch,itemCount:itemCount}]));setQuantity(quantity+itemCount);}};var clear=function clear(){setAggregateItems([]);setQuantity(0);setOrderData(\"\");};var updateOrderData=function updateOrderData(id){setOrderData(id);};return/*#__PURE__*/_jsx(CartContext.Provider,{value:{aggregateItems:aggregateItems,setAggregateItems:setAggregateItems,addItem:addItem,quantity:quantity,setQuantity:setQuantity,clear:clear,updateOrderData:updateOrderData},children:children});};","map":{"version":3,"sources":["C:/wamp64/www/tienda-martinez/src/context/CartContext.jsx"],"names":["React","useState","CartContext","createContext","CartComponentProvider","children","quantity","setQuantity","aggregateItems","setAggregateItems","orderData","setOrderData","addItem","smartwatch","itemCount","smartwatchId","id","dupAggregateItems","found","find","element","sum","clear","updateOrderData"],"mappings":"gTAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA;2CACA,MAAO,IAAMC,CAAAA,WAAW,cAAGF,KAAK,CAACG,aAAN,CAAoB,EAApB,CAApB,CAEP;AACA,MAAO,IAAMC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,MAAkB,IAAfC,CAAAA,QAAe,MAAfA,QAAe,CACrD;AACA,cAAgCJ,QAAQ,CAAC,CAAD,CAAxC,wCAAOK,QAAP,eAAiBC,WAAjB,eACA,eAA4CN,QAAQ,CAAC,EAAD,CAApD,yCAAOO,cAAP,eAAuBC,iBAAvB,eACA,eAAkCR,QAAQ,CAAC,EAAD,CAA1C,yCAAOS,SAAP,eAAkBC,YAAlB,eAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,UAAD,CAAaC,SAAb,CAA2B,CACzC,GAAMC,CAAAA,YAAY,CAAGF,UAAU,CAACG,EAAhC,CACA,GAAMC,CAAAA,iBAAiB,oBAAOT,cAAP,CAAvB,CAEA;AACA,GAAMU,CAAAA,KAAK,CAAGD,iBAAiB,CAACE,IAAlB,CAAuB,SAACC,OAAD,CAAa,CAChD,MAAOA,CAAAA,OAAO,CAACP,UAAR,CAAmBG,EAAnB,GAA0BD,YAAjC,CACD,CAFa,CAAd,CAIA;AACA,GAAIG,KAAJ,CAAW,CACT,GAAMG,CAAAA,GAAG,CAAGH,KAAK,CAACJ,SAAlB,CACAI,KAAK,CAACJ,SAAN,CAAkBO,GAAG,CAAGP,SAAxB,CAEAL,iBAAiB,CAACQ,iBAAD,CAAjB,CACAV,WAAW,CAACD,QAAQ,CAAGQ,SAAZ,CAAX,CACD,CAND,IAMO,CACLL,iBAAiB,8BAAKD,cAAL,GAAqB,CAAEK,UAAU,CAAVA,UAAF,CAAcC,SAAS,CAATA,SAAd,CAArB,GAAjB,CACAP,WAAW,CAACD,QAAQ,CAAGQ,SAAZ,CAAX,CACD,CACF,CApBD,CAsBA,GAAMQ,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAAM,CAClBb,iBAAiB,CAAC,EAAD,CAAjB,CACAF,WAAW,CAAC,CAAD,CAAX,CACAI,YAAY,CAAC,EAAD,CAAZ,CACD,CAJD,CAMA,GAAMY,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACP,EAAD,CAAQ,CAC9BL,YAAY,CAACK,EAAD,CAAZ,CACD,CAFD,CAIA,mBACE,KAAC,WAAD,CAAa,QAAb,EACE,KAAK,CAAE,CACLR,cAAc,CAAdA,cADK,CAELC,iBAAiB,CAAjBA,iBAFK,CAGLG,OAAO,CAAPA,OAHK,CAILN,QAAQ,CAARA,QAJK,CAKLC,WAAW,CAAXA,WALK,CAMLe,KAAK,CAALA,KANK,CAOLC,eAAe,CAAfA,eAPK,CADT,UAYGlB,QAZH,EADF,CAgBD,CAtDM","sourcesContent":["import React, { useState } from \"react\";\r\n\r\n// Array para almacenar los productos agregados\r\nexport const CartContext = React.createContext([]);\r\n\r\n// CartComponentProvider es el proveedor de nuestro CartContext\r\nexport const CartComponentProvider = ({ children }) => {\r\n  // Cantidad de los productos agregados\r\n  const [quantity, setQuantity] = useState(0);\r\n  const [aggregateItems, setAggregateItems] = useState([]);\r\n  const [orderData, setOrderData] = useState(\"\");\r\n\r\n  const addItem = (smartwatch, itemCount) => {\r\n    const smartwatchId = smartwatch.id;\r\n    const dupAggregateItems = [...aggregateItems];\r\n\r\n    // Buscamos si coincide el id del item a agregar con los que tenemos agregados\r\n    const found = dupAggregateItems.find((element) => {\r\n      return element.smartwatch.id === smartwatchId;\r\n    });\r\n\r\n    // Condici칩n para saber si el item est치 agregado\r\n    if (found) {\r\n      const sum = found.itemCount;\r\n      found.itemCount = sum + itemCount;\r\n\r\n      setAggregateItems(dupAggregateItems);\r\n      setQuantity(quantity + itemCount);\r\n    } else {\r\n      setAggregateItems([...aggregateItems, { smartwatch, itemCount }]);\r\n      setQuantity(quantity + itemCount);\r\n    }\r\n  };\r\n\r\n  const clear = () => {\r\n    setAggregateItems([]);\r\n    setQuantity(0);\r\n    setOrderData(\"\");\r\n  };\r\n\r\n  const updateOrderData = (id) => {\r\n    setOrderData(id);\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider\r\n      value={{\r\n        aggregateItems,\r\n        setAggregateItems,\r\n        addItem,\r\n        quantity,\r\n        setQuantity,\r\n        clear,\r\n        updateOrderData,\r\n      }}\r\n    >\r\n      {/* Componentes que van a tener acceso */}\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}