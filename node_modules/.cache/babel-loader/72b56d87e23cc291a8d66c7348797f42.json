{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\tienda-martinez\\\\src\\\\components\\\\cart\\\\Form.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { database } from \"../../firebase/firebase\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Form = ({\n  aggregateItems,\n  itemsPrice,\n  clear\n}) => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [mail, setMail] = useState(\"\");\n  const [redirect, setRedirect] = useState(false);\n  const [orderNumber, setOrderNumber] = useState(\"\");\n  const [error, setError] = useState(false);\n  const [showForm, setShowForm] = useState(true);\n\n  const createOrder = e => {\n    e.preventDefault();\n    const buyer = {\n      name: name,\n      phone: phone,\n      mail: mail\n    };\n    const itemsToUpdate = database.collection(\"products\").where(firebase.firestore.FieldPath.documentId(), \"in\", aggregateItems.map(i => i.smartwatch.id));\n\n    const createOrder = buyer => {\n      const newOrder = {\n        buyer: buyer,\n        items: aggregateItems,\n        date: firebase.firestore.Timestamp.fromDate(new Date()),\n        total: itemsPrice\n      };\n      return newOrder;\n    };\n\n    const addNewOrder = buyer => {\n      const newOrder = createOrder(buyer);\n      const orders = database.collection(\"orders\");\n\n      try {\n        orders.add(newOrder).then(doc => {\n          setShowForm(false);\n          updateOrderData(doc.id);\n        });\n      } catch (error) {\n        setError(true);\n      }\n    };\n\n    itemsToUpdate.get().then(querySnapshot => {\n      const batch = database.batch();\n      const outOfStock = [];\n      querySnapshot.docs.forEach((docSnapshot, id) => {\n        if (docSnapshot.data().stock >= aggregateItems[id].itemCount) {\n          batch.update(docSnapshot.ref, {\n            stock: docSnapshot.data().stock - aggregateItems[id].itemCount\n          });\n        } else {\n          outOfStock.push({ ...docSnapshot.data(),\n            id: docSnapshot.id\n          });\n        }\n      });\n\n      if (outOfStock.length === 0) {\n        /* const newOrderReference = database.collection(\"orders\").doc();\r\n          const orderItems = aggregateItems.map((item) => {\r\n          return {\r\n            id: item.smartwatch.id,\r\n            title: item.smartwatch.name,\r\n            price: item.smartwatch.price,\r\n            qty: item.itemCount,\r\n          };\r\n        });\r\n          batch.set(newOrderReference, {\r\n          buyer: buyer,\r\n          items: orderItems,\r\n          date: firebase.firestore.Timestamp.fromDate(new Date()),\r\n          total: itemsPrice,\r\n        });\r\n          batch.commit().then(() => {\r\n          database\r\n            .collection(\"orders\")\r\n            .orderBy(\"date\", \"desc\")\r\n            .limit(1)\r\n            .get()\r\n            .then((querySnapshot) => {\r\n              setOrderNumber(querySnapshot.docs[0].id);\r\n              setRedirect(true);\r\n              clear();\r\n            });\r\n        }); */\n        batch.commit().then(() => {\n          addNewOrder(buyer);\n        });\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: redirect ? alert(`Orden realizada con Ã©xito ${orderNumber}`) : /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: createOrder,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Nombre:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: name,\n          onChange: e => setName(e.target.value),\n          placeholder: \"Tomas Martinez\",\n          id: \"name\",\n          type: \"text\",\n          autoComplete: \"name\",\n          enterKeyHint: \"next\",\n          required: true,\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Tel\\xE9fono:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: phone,\n          onChange: e => setPhone(e.target.value),\n          placeholder: \"+54 261 542389\",\n          id: \"phone\",\n          type: \"tel\",\n          autoComplete: \"phone\",\n          enterKeyHint: \"next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Mail:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: mail,\n          onChange: e => setMail(e.target.value),\n          placeholder: \"ejemplo@ejemplo.com\",\n          id: \"mail\",\n          type: \"email\",\n          autoComplete: \"email\",\n          enterKeyHint: \"next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-outline-success\",\n        type: \"submit\",\n        disabled: name === \"\" || phone === \"\" || mail === \"\",\n        children: \"Finalizar Compra\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Form, \"pySs9Deyt+ef1N0O5UPj7STCioM=\");\n\n_c = Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/wamp64/www/tienda-martinez/src/components/cart/Form.jsx"],"names":["React","useState","database","firebase","Form","aggregateItems","itemsPrice","clear","name","setName","phone","setPhone","mail","setMail","redirect","setRedirect","orderNumber","setOrderNumber","error","setError","showForm","setShowForm","createOrder","e","preventDefault","buyer","itemsToUpdate","collection","where","firestore","FieldPath","documentId","map","i","smartwatch","id","newOrder","items","date","Timestamp","fromDate","Date","total","addNewOrder","orders","add","then","doc","updateOrderData","get","querySnapshot","batch","outOfStock","docs","forEach","docSnapshot","data","stock","itemCount","update","ref","push","length","commit","alert","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { database } from \"../../firebase/firebase\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\n\r\nexport const Form = ({ aggregateItems, itemsPrice, clear }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [mail, setMail] = useState(\"\");\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [orderNumber, setOrderNumber] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n  const [showForm, setShowForm] = useState(true);\r\n\r\n  const createOrder = (e) => {\r\n    e.preventDefault();\r\n\r\n    const buyer = {\r\n      name: name,\r\n      phone: phone,\r\n      mail: mail,\r\n    };\r\n\r\n    const itemsToUpdate = database.collection(\"products\").where(\r\n      firebase.firestore.FieldPath.documentId(),\r\n      \"in\",\r\n      aggregateItems.map((i) => i.smartwatch.id)\r\n    );\r\n\r\n    const createOrder = (buyer) => {\r\n      const newOrder = {\r\n        buyer: buyer,\r\n        items: aggregateItems,\r\n        date: firebase.firestore.Timestamp.fromDate(new Date()),\r\n        total: itemsPrice,\r\n      };\r\n      return newOrder;\r\n    };\r\n\r\n    const addNewOrder = (buyer) => {\r\n      const newOrder = createOrder(buyer);\r\n      const orders = database.collection(\"orders\");\r\n      try {\r\n        orders.add(newOrder).then((doc) => {\r\n          setShowForm(false);\r\n          updateOrderData(doc.id);\r\n        });\r\n      } catch (error) {\r\n        setError(true);\r\n      }\r\n    };\r\n\r\n    itemsToUpdate.get().then((querySnapshot) => {\r\n      const batch = database.batch();\r\n      const outOfStock = [];\r\n\r\n      querySnapshot.docs.forEach((docSnapshot, id) => {\r\n        if (docSnapshot.data().stock >= aggregateItems[id].itemCount) {\r\n          batch.update(docSnapshot.ref, {\r\n            stock: docSnapshot.data().stock - aggregateItems[id].itemCount,\r\n          });\r\n        } else {\r\n          outOfStock.push({ ...docSnapshot.data(), id: docSnapshot.id });\r\n        }\r\n      });\r\n\r\n      if (outOfStock.length === 0) {\r\n        /* const newOrderReference = database.collection(\"orders\").doc();\r\n\r\n        const orderItems = aggregateItems.map((item) => {\r\n          return {\r\n            id: item.smartwatch.id,\r\n            title: item.smartwatch.name,\r\n            price: item.smartwatch.price,\r\n            qty: item.itemCount,\r\n          };\r\n        });\r\n\r\n        batch.set(newOrderReference, {\r\n          buyer: buyer,\r\n          items: orderItems,\r\n          date: firebase.firestore.Timestamp.fromDate(new Date()),\r\n          total: itemsPrice,\r\n        });\r\n\r\n        batch.commit().then(() => {\r\n          database\r\n            .collection(\"orders\")\r\n            .orderBy(\"date\", \"desc\")\r\n            .limit(1)\r\n            .get()\r\n            .then((querySnapshot) => {\r\n              setOrderNumber(querySnapshot.docs[0].id);\r\n              setRedirect(true);\r\n              clear();\r\n            });\r\n        }); */\r\n        batch.commit().then(() => {\r\n          addNewOrder(buyer);\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {redirect ? (\r\n        alert(`Orden realizada con Ã©xito ${orderNumber}`)\r\n      ) : (\r\n        <form onSubmit={createOrder}>\r\n          <p>\r\n            <label>Nombre:</label>\r\n            <br></br>\r\n            <input\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n              placeholder=\"Tomas Martinez\"\r\n              id=\"name\"\r\n              type=\"text\"\r\n              autoComplete=\"name\"\r\n              enterKeyHint=\"next\"\r\n              required\r\n              autoFocus\r\n            />\r\n          </p>\r\n          <p>\r\n            <label>TelÃ©fono:</label>\r\n            <br></br>\r\n            <input\r\n              value={phone}\r\n              onChange={(e) => setPhone(e.target.value)}\r\n              placeholder=\"+54 261 542389\"\r\n              id=\"phone\"\r\n              type=\"tel\"\r\n              autoComplete=\"phone\"\r\n              enterKeyHint=\"next\"\r\n            />\r\n          </p>\r\n          <p>\r\n            <label>Mail:</label>\r\n            <br></br>\r\n            <input\r\n              value={mail}\r\n              onChange={(e) => setMail(e.target.value)}\r\n              placeholder=\"ejemplo@ejemplo.com\"\r\n              id=\"mail\"\r\n              type=\"email\"\r\n              autoComplete=\"email\"\r\n              enterKeyHint=\"next\"\r\n            />\r\n          </p>\r\n          <button\r\n            className=\"btn btn-outline-success\"\r\n            type=\"submit\"\r\n            disabled={name === \"\" || phone === \"\" || mail === \"\"}\r\n          >\r\n            Finalizar Compra\r\n          </button>\r\n        </form>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}