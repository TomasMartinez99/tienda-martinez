{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\tienda-martinez\\\\src\\\\views\\\\ItemDetailContainer\\\\ItemDetailContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport ItemDetail from \"./ItemDetail\";\nimport { useParams } from \"react-router-dom\";\n/* import { Smartwatches } from \"../../services/Smartwatches\"; */\n\nimport { database } from \"../../firebase/firebase\"; // Promise\n\n/* const promiseItem = () => {\r\n  return new Promise((resolve, reject) => {\r\n    setTimeout(() => {\r\n      // Si est치 todo ok se muestra el resolve\r\n      resolve(Smartwatches);\r\n    }, 1000);\r\n  });\r\n}; */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ItemDetailContainer = props => {\n  _s();\n\n  // Hook useState\n  const [itemToShow, setItemToShow] = useState([]); // useParams (par치metros que recibo por url)\n\n  const {\n    itemId\n  } = useParams(); // useEffect de Firebase\n\n  useEffect(() => {\n    const itemCollection = database.collection(\"products\");\n    const idFilter = itemCollection.where(\"id\", \"==\", itemId);\n    idFilter.get().then(doc => {\n      if (!doc.exists) {\n        alert(\"No hay resultados\");\n      }\n\n      setItemToShow({\n        id: doc.id,\n        ...doc.data()\n      });\n    }).catch(error => {\n      console.log(\"Error buscando items\", error);\n    });\n  }, [itemId]); // Hook useEffect\n\n  /*   useEffect(() => {\r\n    promiseItem().then((Smartwatches) => {\r\n      const idFilter = Smartwatches.filter(\r\n        (smartwatch) => smartwatch.id == itemId\r\n      );\r\n      setItemToShow(idFilter[0]);\r\n    });\r\n  }, [itemId]); */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: /*#__PURE__*/_jsxDEV(ItemDetail, {\n      itemToShow: itemToShow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ItemDetailContainer, \"MQQsYG8ZtQCn98YTmZWXBQenjbE=\", false, function () {\n  return [useParams];\n});\n\n_c = ItemDetailContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemDetailContainer\");","map":{"version":3,"sources":["C:/wamp64/www/tienda-martinez/src/views/ItemDetailContainer/ItemDetailContainer.jsx"],"names":["React","useState","useEffect","ItemDetail","useParams","database","ItemDetailContainer","props","itemToShow","setItemToShow","itemId","itemCollection","collection","idFilter","where","get","then","doc","exists","alert","id","data","catch","error","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA;;AACA,SAASC,QAAT,QAAyB,yBAAzB,C,CAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AAC5C;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C,CAF4C,CAI5C;;AACA,QAAM;AAAES,IAAAA;AAAF,MAAaN,SAAS,EAA5B,CAL4C,CAO5C;;AACAF,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,cAAc,GAAGN,QAAQ,CAACO,UAAT,CAAoB,UAApB,CAAvB;AACA,UAAMC,QAAQ,GAAGF,cAAc,CAACG,KAAf,CAAqB,IAArB,EAA2B,IAA3B,EAAiCJ,MAAjC,CAAjB;AAEAG,IAAAA,QAAQ,CACLE,GADH,GAEGC,IAFH,CAESC,GAAD,IAAS;AACb,UAAI,CAACA,GAAG,CAACC,MAAT,EAAiB;AACfC,QAAAA,KAAK,CAAC,mBAAD,CAAL;AACD;;AACDV,MAAAA,aAAa,CAAC;AAAEW,QAAAA,EAAE,EAAEH,GAAG,CAACG,EAAV;AAAc,WAAGH,GAAG,CAACI,IAAJ;AAAjB,OAAD,CAAb;AACD,KAPH,EAQGC,KARH,CAQUC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,KAApC;AACD,KAVH;AAWD,GAfQ,EAeN,CAACb,MAAD,CAfM,CAAT,CAR4C,CAyB5C;;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACE,QAAC,UAAD;AAAY,MAAA,UAAU,EAAEF;AAAxB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAxCM;;GAAMF,mB;UAKQF,S;;;KALRE,mB","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport ItemDetail from \"./ItemDetail\";\r\nimport { useParams } from \"react-router-dom\";\r\n/* import { Smartwatches } from \"../../services/Smartwatches\"; */\r\nimport { database } from \"../../firebase/firebase\";\r\n\r\n// Promise\r\n/* const promiseItem = () => {\r\n  return new Promise((resolve, reject) => {\r\n    setTimeout(() => {\r\n      // Si est치 todo ok se muestra el resolve\r\n      resolve(Smartwatches);\r\n    }, 1000);\r\n  });\r\n}; */\r\n\r\nexport const ItemDetailContainer = (props) => {\r\n  // Hook useState\r\n  const [itemToShow, setItemToShow] = useState([]);\r\n\r\n  // useParams (par치metros que recibo por url)\r\n  const { itemId } = useParams();\r\n\r\n  // useEffect de Firebase\r\n  useEffect(() => {\r\n    const itemCollection = database.collection(\"products\");\r\n    const idFilter = itemCollection.where(\"id\", \"==\", itemId);\r\n\r\n    idFilter\r\n      .get()\r\n      .then((doc) => {\r\n        if (!doc.exists) {\r\n          alert(\"No hay resultados\");\r\n        }\r\n        setItemToShow({ id: doc.id, ...doc.data() });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error buscando items\", error);\r\n      });\r\n  }, [itemId]);\r\n\r\n  // Hook useEffect\r\n  /*   useEffect(() => {\r\n    promiseItem().then((Smartwatches) => {\r\n      const idFilter = Smartwatches.filter(\r\n        (smartwatch) => smartwatch.id == itemId\r\n      );\r\n      setItemToShow(idFilter[0]);\r\n    });\r\n  }, [itemId]); */\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <ItemDetail itemToShow={itemToShow} />\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}